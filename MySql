create database human;


create table human.person (
id int (20),
name varchar (20),
college varchar (30)
)

select * from human.person;

insert into human.person(id,name,college)values('1','Anmol','CU');
insert into human.person(id,name,college)values('2','ANuj','CGC');
insert into human.person(id,name,college)values('3','Abhishek','DU');
insert into human.person(id,name,college)values('4','Himan','QA');

ALTER table human.person ADD column amount int(20) ;
UPDATE human.person set amount='100' where id='1';
UPDATE human.person set amount='200' where id='2';
UPDATE human.person set amount='300' where id='3';
UPDATE human.person set amount='400' where id='4';

Update human.person set name='Anuj' where id='2' and name='ANuj';

create table human.account (
id int (20),
business varchar (20),
location varchar (30)
)

select * from human.account;

insert into human.account(id,business,location)values('1','Real','India');
insert into human.account(id,business,location)values('2','Own','USA');
insert into human.account(id,business,location)values('3','company','UK');
insert into human.account(id,business,location)values('4','shop','Denmark');

## INNER JOIN ##

select * from
human.person A
inner join human.account B
ON A.id=B.id;

## Subquery##

select * from human.person 
where amount >
(select AVG(amount) from human.person);

----------

SELECT COUNT(*) AS null_count
FROM employees e
JOIN bonuses b ON e.employee_id = b.employee_id
WHERE NULLIF(e.salary, b.bonus_amount) IS NULL;


SELECT COUNT(*) AS null_count
FROM (
  SELECT e.salary, b.bonus_amount
  FROM employees e
  JOIN bonuses b ON e.employee_id = b.employee_id
  LIMIT 10
) AS subquery
WHERE NULLIF(e.salary, b.bonus_amount) IS NULL;



SELECT
    EMP_ID,
    BONUS_AMOUNT,
    WORK_HOURS,
    BONUS_AMOUNT / NULLIF(WORK_HOURS, 0) AS BONUS_PER_HOUR,
    AVG(BONUS_AMOUNT / NULLIF(WORK_HOURS, 0)) OVER () AS AVG_BONUS_PER_HOUR
FROM
    PAYROLL
WHERE
    BONUS_AMOUNT / NULLIF(WORK_HOURS, 0) IS NOT NULL;



SELECT *
FROM (
  SELECT dept, month, sales
  FROM (
    SELECT dept, 'JAN' AS month, jan AS sales FROM sales
    UNION ALL
    SELECT dept, 'FEB', feb FROM sales
    UNION ALL
    SELECT dept, 'MAR', mar FROM sales
  )
  MODEL
    DIMENSION BY (dept, month)
    MEASURES (sales)
    RULES (
      sales[dept, 'TOTAL'] = sales[dept, 'JAN'] + sales[dept, 'FEB'] + sales[dept, 'MAR']
    )
)
PIVOT (
  MAX(sales) FOR month IN ('JAN' AS JAN, 'FEB' AS FEB, 'MAR' AS MAR, 'TOTAL' AS TOTAL)
)
ORDER BY dept;


----Loop-----


BEGIN
  FOR emp_rec IN (
    SELECT employee_id, first_name, salary
    FROM employees
    WHERE department_id = 10
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('ID: ' || emp_rec.employee_id ||
                         ', Name: ' || emp_rec.first_name ||
                         ', Salary: ' || emp_rec.salary);
  END LOOP;
END;
/
SET SERVEROUTPUT ON


Shows the total pay (BASE_SALARY + BONUS)
	•	Uses NULLIF to hide the BONUS if it’s zero (returning NULL instead)
	•	Also identify employees who do not have salary data
